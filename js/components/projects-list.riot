<!--Parent component that handles logic for gathering data-->
<projects-list>
    <search search={this.search}></search>
    <p if={this.state.data} style="text-align: right; color: #505050; margin-bottom: 0;" class="vf-text-body vf-text-body--3">{this.state.data.length} projects shown</p>
    <data-table data={this.state.data} setSort={this.setSort} sort={this.state.sort}></data-table>

    <script>
        import DataTable from "./table.riot";
        import Search from "./search.riot";
        import resolve from "../resolver";

        export default {
            onMounted() {
                this.update({ data: [] })

                resolve().then(data => {
                    this.update({
                        unfilteredData: data,
                        data: data,
                        sort: {
                            timestampDesc: true
                        }
                    });
                });
            },
            setSort(sortBy) {
                this.update({
                    sort: sortBy,
                    data: this.sortData(this.state.data, sortBy)
                });
            },
            sortData: (data, { timestampDesc }) => {
                // Arrow function as this is "static" (pure function) and should not change state
                if (timestampDesc) {
                    return data.sort((a, b) => a.added_to_index <= b.added_to_index ? 1 : -1);
                }
                return data.sort((a, b) => a.added_to_index <= b.added_to_index ? -1 : 1);
            },
            search(val) {
                const filtered = this.state.unfilteredData.filter(
                    dataPoint => [                             
                            dataPoint["contributors"].map(contributor => contributor.name).join(", "),
                            dataPoint["uuid"],
                            dataPoint["project_core"]["project_title"],
                            dataPoint["insdc_project_accessions"].join(" "),
                            dataPoint["array_express_accessions"].join(" ")
                        ].map(x => x.toLowerCase()).join(" ").includes(val.toLowerCase())
                );
                this.update({
                    data: this.sortData(filtered, this.state.sort)
                });
            },
            components: {
                DataTable,
                Search
            }
        }
    </script>
</projects-list>